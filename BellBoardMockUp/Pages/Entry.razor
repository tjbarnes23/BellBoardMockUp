@page "/entry"
@using BellBoardMockUp.Models
@using BellBoardMockUp.Utilities

<Modal @ref="Modal"></Modal>

<div class="container mx-2">
    <h1>BellBoard Performance Entry Mock-up</h1>

    <EditForm Model="@Performance">
        <hr />

        <div class="row mt-2">
            <div class="col-6 col-md-5 col-lg-4 col-xl-3">
                Style
                <button @onclick="@(e => ActivatePopUp(PopUp.Style))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <CustomInputSelect Value="@Performance.Style"
                                   ValueChanged="@( (int value) => StyleChanged(value) )"
                                   ValueExpression="@( () => Performance.Style )"
                                   style="width: 100%; height: 28px">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <option value="@i">@ControlData.Style(i)</option>
                    }
                </CustomInputSelect>
            </div>

            @if (Performance.Style == 4)
            {
                <div class="col-6 col-md-4 col-lg-3">
                    Other Style
                    <br />
                    <InputTextArea @bind-Value="Performance.StyleOther" style="width: 100%" />
                </div>
            }
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col-6 col-md-4 col-lg-3">
                Association (drop down)
                <br />
                <CustomInputSelect Value="@Performance.AssociationDropDown"
                                   ValueChanged="@( (int value) => AssociationDropDownChanged(value) )"
                                   ValueExpression="@( () => Performance.AssociationDropDown )"
                                   style="width: 100%; height: 28px">
                    <option value="0">Please select...</option>
                    @for (int i = 1; i <= 3; i++)
                    {
                        <option value="@i">@ControlData.Association(i)</option>
                    }
                </CustomInputSelect>
            </div>

            <div class="col-6 col-md-4 col-lg-3">
                Association (free form)
                <br />
                <InputText @bind-Value="Performance.AssociationFreeForm" style="width: 100%" />
            </div>

            <div class="col-6 col-md-4 col-lg-3">
                Date
                <br />
                <InputText @bind-Value="Performance.Date" style="width: 100%" />
            </div>
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col-6 col-md-4 col-lg-3 pt-2">
                Distributed? &nbsp;
                <InputCheckbox @bind-Value="@Performance.Distributed" />
                <button @onclick="@(e => ActivatePopUp(PopUp.Distributed))" style="background-color: white;
                        border: none">
                    <b>&#9432;</b>
                </button>
            </div>

            @if (Performance.Distributed == false)
            {
                <div class="col-6 col-md-4 col-lg-3">
                    Place
                    <br />
                    <InputText @bind-Value="Performance.Location" style="width: 100%" />
                </div>

                <div class="col-6 col-md-4 col-lg-3">
                    County, State, Country
                    <br />
                    <InputText @bind-Value="Performance.County" style="width: 100%" />
                </div>

                <div class="col-6 col-md-4 col-lg-3">
                    Dedication / Address
                    <br />
                    <InputText @bind-Value="Performance.Address" style="width: 100%" />
                </div>
            }
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col-6 col-md-4 col-lg-3">
                Tenor info (if applicable)
                <button @onclick="@(e => ActivatePopUp(PopUp.Tenor))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <InputText @bind-Value="Performance.Tenor" style="width: 100%" />
            </div>

            <div class="col-6 col-md-4 col-lg-3">
                Platform (if applicable)
                <button @onclick="@(e => ActivatePopUp(PopUp.Platform))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <InputText @bind-Value="Performance.Platform" style="width: 100%" />
            </div>

            <div class="col-6 col-md-4 col-lg-3">
                Time taken
                <button @onclick="@(e => ActivatePopUp(PopUp.Time))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <InputText @bind-Value="Performance.Time" style="width: 100%" />
            </div>
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col-6 col-md-5 col-lg-4 col-xl-3 pt-2">
                Import from CompLib? &nbsp;
                <InputCheckbox @bind-Value="@Performance.ImportFromCompLib" />
                <button @onclick="@(e => ActivatePopUp(PopUp.Import))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
            </div>

            @if (Performance.ImportFromCompLib == true)
            {
                <div class="col-6">
                    <div style="display: inline-block">
                        CompLib composition id
                        <br />
                        <InputText @bind-Value="Performance.CompLibId" style="width: 90px" />
                        <button class="btn btn-primary" @onclick="CompImport" style="margin-left: 4px;
                                height: 30px; padding-top: 2px">
                            Import
                        </button>
                    </div>

                    @if (CompImporting == true)
                    {
                        <div class="spinner" style="display: inline-block; vertical-align: middle; margin-left: 6px;
                                --borderwidth: 5px; --width: 24px; --height: 24px">
                        </div>
                    }
                </div>
            }
        </div>

        <div class="row mt-3">
            <div class="col-7 col-md-6 col-lg-4">
                Performance Title
                <button @onclick="@(e => ActivatePopUp(PopUp.Title))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
            </div>

            <div class="col-5 col-lg-3">
                Composer
            </div>
        </div>

        <div class="row">
            <div class="col-2 col-lg-1 pr-1">
                <InputText @bind-Value="Performance.Length"
                           style="width: 100%" />
                <br />
                <small>Length</small>
            </div>

            <div class="col-5 col-md-4 col-lg-3 pl-1">
                <InputText @bind-Value="Performance.Title" style="width: 100%" />
                <br />
                <small>Method / Class / Stage</small>
            </div>

            <div class="col-5 col-md-4 col-lg-3">
                <InputText @bind-Value="Performance.Composer" style="width: 100%" />
            </div>
        </div>

        <div class="row mt-3">
            <div class="col">
                Performance Detail
                <button @onclick="@(e => ActivatePopUp(PopUp.Detail))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <InputTextArea @bind-Value="Performance.Detail" style="width: 100%" />
            </div>
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col-6 col-md-4 col-lg-3">
                Number of ringers
                <button @onclick="@(e => ActivatePopUp(PopUp.NumRingers))" style="background-color: white;
                        border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <CustomInputSelect Value="@Performance.NumRingers"
                                   ValueChanged="@( (int value) => NumRingersChanged(value) )"
                                   ValueExpression="@( () => Performance.NumRingers )"
                                   style="width: 100%; height: 28px">
                    @for (int i = 1; i <= 24; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </CustomInputSelect>
            </div>

            <div class="col-6 col-md-4 col-lg-3">
                Bells per ringer
                <button @onclick="@(e => ActivatePopUp(PopUp.BellsPerRinger))" style="background-color: white;
                        border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <CustomInputSelect Value="@Performance.BellsPerRinger"
                                   ValueChanged="@( (int value) => BellsPerRingerChanged(value) )"
                                   ValueExpression="@( () => Performance.BellsPerRinger )"
                                   style="width: 100%; height: 28px">
                    @for (int i = 1; i <= 3; i++)
                    {
                        <option value="@i">@ControlData.BellsPerRinger(i)</option>
                    }
                </CustomInputSelect>
            </div>

            <div class="col-6 col-lg-5 pt-2 pt-md-4">
                Enter additional ringer info? &nbsp;
                <InputCheckbox Value="@Performance.AdditionalRingerInfo"
                               ValueChanged="@( (bool value) => AdditionalRingerInfoChanged(value) )"
                               ValueExpression="@( () => Performance.AdditionalRingerInfo )" />
                <button @onclick="@(e => ActivatePopUp(PopUp.AdditionalRingerInfo))" style="background-color: white;
                        border: none">
                    <b>&#9432;</b>
                </button>
            </div>
        </div>


        <div class="row mt-3">
            @if (Performance.BellsPerRinger == 1)
            {
                <div class="col-2 col-lg-1">
                    <b>Bell</b>
                </div>
            }
            else if (Performance.BellsPerRinger == 2)
            {
                <div class="col-2 col-lg-1">
                    <b>Bells</b>
                </div>
            }
            else
            {
                <div class="col-2 col-lg-1">
                    <b>Bell(s)</b>
                </div>
            }

            <div class="col-3">
                <b>Ringer</b>
            </div>

            <div class="col-1">
                <b>(C)</b>
            </div>
            @if (Performance.AdditionalRingerInfo == true)
            {
                <div class="col-3">
                    <b>Additional info</b>
                </div>
            }

            @if (Performance.Distributed == true)
            {
                <div class="col-3">
                    <b>Approx location</b>
                </div>
            }
        </div>

        @foreach (RingerData ringer in Performance.Ringers)
        {
            if (Performance.Style == 5)
            {
                <hr class="mt-1" />
            }

            <div class="row mt-1">
                @if (Performance.BellsPerRinger == 3)
                {
                    <div class="col-2 col-lg-1">
                        <InputText id="@ringer.Id"
                                   @bind-Value="ringer.Bell"
                                   style="width: 100%; margin-bottom: 2px" />
                    </div>
                }
                else
                {
                    <div class="col-2 col-lg-1">
                        <label>@ringer.Bell</label>
                    </div>
                }

                <div class="col-3">
                    <InputText id="@ringer.Id"
                               @bind-Value="ringer.Ringer"
                               style="width: 100%" />
                </div>

                <div class="col-1">
                    <InputCheckbox id="@ringer.Id"
                                   @bind-Value="ringer.Conductor"
                                   style="margin-left: 5px" />
                </div>

                @if (Performance.AdditionalRingerInfo == true)
                {
                    <div class="col-3">
                        <InputText id="@ringer.Id"
                                   @bind-Value="ringer.RingerInfo"
                                   style="width: 100%" />
                    </div>
                }

                @if (Performance.Distributed == true)
                {
                    <div class="col-3">
                        <InputText id="@ringer.Id"
                                   @bind-Value="ringer.RingerLocation"
                                   style="width: 100%" />
                    </div>
                }
            </div>

            @if (Performance.Style == 5)
            {
                <div class="row mt-2">
                    <div class="col-10 col-md-7 col-lg-5 col-xl-4 offset-2 offset-lg-1">
                        &nbsp; Style:
                        <button @onclick="@(e => ActivatePopUp(PopUp.RingerStyle))" style="background-color: white;
                                border: none">
                            <b>&#9432;</b>
                        </button>
                        <CustomInputSelect @bind-Value="ringer.RingerStyle" style="height: 28px">
                            @for (int i = 1; i <= 4; i++)
                                    {
                                <option value="@i">@ControlData.Style(i)</option>
                                    }
                        </CustomInputSelect>
                    </div>

                    @if (ringer.RingerStyle == 4)
                    {
                        <div class="col-10 col-md-7 col-lg-5 col-xl-4 offset-md-2 offset-2 offset-lg-0 mt-2 mt-lg-0">
                            &nbsp; Other Style: &nbsp;
                            <InputText @bind-Value="ringer.RingerStyleOther" />
                        </div>
                    }
                </div>
            }
        }

        <hr />

        <div class="row mt-2">
            <div class="col">
                Footnotes
                <br />
                <InputTextArea @bind-Value="Performance.Footnotes" style="width: 100%" />
            </div>
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col">
                New methods named
                <button @onclick="@(e => ActivatePopUp(PopUp.NewMethods))" style="background-color: white;
                            border: none">
                    <b>&#9432;</b>
                </button>
            </div>
        </div>

        @foreach (NewMethodData newMethod in Performance.NewMethods)
        {
            <div class="row mt-2">
                <div class="col-4 col-lg-2 pr-0">
                    Name
                    <br />
                    <InputText id="@newMethod.Id" @bind-Value="newMethod.Name" style="width: 100%" />
                </div>

                <div class="col-4 col-lg-2 pr-0">
                    Place notation
                    <br />
                    <InputText id="@newMethod.Id" @bind-Value="newMethod.PlaceNotation" style="width: 100%" />
                </div>

                <div class="col-4 col-lg-2">
                    Stage
                    <br />
                    <InputSelect id="@newMethod.Id" @bind-Value="newMethod.Stage" style="width: 100%; height: 28px">
                        <option value="0">Please select...</option>
                        @for (int i = 2; i <= 24; i++)
                            {
                            <option value="@i">@ControlData.Stage(i)</option>
                            }
                    </InputSelect>
                </div>

                <div class="col-4 col-lg-2 pr-0">
                    <br />
                    <div class="ml-3" style="display: inline-block">
                        <button class="btn btn-primary" @onclick="@(e => ValidateMethod(newMethod.Id))"
                                style="height: 30px; padding-top: 2px">
                            Validate
                        </button>
                    </div>

                    @if (newMethod.Validating == true)
                    {
                        <div class="spinner" style="display: inline-block; vertical-align: middle; margin-left: 7px;
                                    --borderwidth: 5px; --width: 24px; --height: 24px">
                        </div>
                    }
                </div>

                <div class="col-4 col-lg-2 pr-0">
                    Status
                    <br />
                    <InputText id="@newMethod.Id" @bind-Value="newMethod.Status" style="width: 100%" disabled="true" />
                </div>

                <div class="col-4 col-lg-2">
                    Title
                    <br />
                    <InputText id="@newMethod.Id" @bind-Value="newMethod.Title" style="width: 100%" disabled="true" />
                </div>
            </div>

            <div class="d-lg-none">
                <hr />
            </div>
        }

        <div class="row mt-2 mt-lg-4">
            <div class="col">
                <button @onclick="Performance.AddNewMethod" class="btn btn-primary" style="height: 30px; padding-top: 2px">
                    Enter another new method
                </button>
            </div>
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col">
                Departures from Norms
                <button @onclick="@(e => ActivatePopUp(PopUp.Norms))" style="background-color: white; border: none">
                    <b>&#9432;</b>
                </button>
                <br />
                <InputTextArea @bind-Value="Performance.NormDepartures" style="width: 100%" />
            </div>
        </div>

        <hr />

        <div class="row mt-2">
            <div class="col">
                <div style="display: inline-block; width: 200px; margin-right: 10px">
                    Nickname:
                    <InputText @bind-Value="Performance.Nickname" />
                </div>

                <div style="display: inline-block; margin-right: 10px">
                    <button class="btn btn-primary" @onclick="SaveDraft">
                        Save draft
                    </button>
                </div>

                @if (Saving == true)
                {
                    <div class="spinner" style="display: inline-block; vertical-align: middle; margin-left: 6px;
                                --borderwidth: 5px; --width: 24px; --height: 24px">
                    </div>
                }

                <div style="display: inline-block; margin-right: 10px">
                    <button class="btn btn-primary" @onclick="@(e => NavManager.NavigateTo("/preview"))">
                        Preview submission
                    </button>
                </div>
            </div>
        </div>

        <hr />
    </EditForm>

    <br />
</div>
