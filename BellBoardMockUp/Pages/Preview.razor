@page "/preview"
@using BellBoardMockUp.Models
@using BellBoardMockUp.Utilities

<div class="container mx-0 mx-md-2 my-1 my-md-3">
    @if (Performance.AssociationDropDown != 0)
    {
        <div>
            <b>@ControlData.Association(Performance.AssociationDropDown)</b>
        </div>
    }
    else if (!string.IsNullOrEmpty(Performance.AssociationFreeForm))
    {
        <div>
            <b>@Performance.AssociationFreeForm</b>
        </div>
    }

    @if (Performance.Distributed == false)
    {
        if (!string.IsNullOrEmpty(Performance.Location) && !string.IsNullOrEmpty(Performance.County))
        {
            <div>
                <b>@Performance.Location,</b> @Performance.County
            </div>
        }
        else if (!string.IsNullOrEmpty(Performance.Location))
        {
            <div>
                <b>@Performance.Location</b>
            </div>
        }
        else if (!string.IsNullOrEmpty(Performance.County))
        {
            <div>
                <b>@Performance.County</b>
            </div>
        }

        if (!string.IsNullOrEmpty(Performance.Address))
        {
            <div>
                @Performance.Address
            </div>
        }
    }

    @if (!string.IsNullOrEmpty(Performance.Platform))
    {
        <div>
            <b>@Performance.Platform</b>
        </div>
    }

    <div>
        <div style="display: inline-block">
            @Performance.Date.ToString("dddd, d MMMM yyyy")
        </div>

        @if (!string.IsNullOrEmpty(Performance.Time))
        {
            <div style="display: inline-block">
                in @Performance.Time
            </div>
        }

        @if (!string.IsNullOrEmpty(Performance.Tenor))
        {
            <div style="display: inline-block">
                (@Performance.Tenor)
            </div>
        }
    </div>

    <div>
        <b>@Performance.Length @Performance.Title</b>
    </div>

    @if (!string.IsNullOrEmpty(Performance.Detail))
    {
        <div style="font-size: 12px">
            @Performance.Detail
        </div>
    }

    @if (!string.IsNullOrEmpty(Performance.Composer))
    {
        <div>
            Composed by @Performance.Composer
        </div>
    }
    
    <div style="display: table">
        @foreach (RingerData ringerData in Performance.Ringers)
        {
            <div style="display: table-row">
                <div class="pr-3" style="display: table-cell; white-space: nowrap">
                    @ringerData.Bell
                </div>

                <div style="display: table-cell; padding-left: 20px; text-indent: -20px">
                    <span style="vertical-align: middle">@ConsolidatedRinger(ringerData)</span>
                    <span style="font-size: 14px; vertical-align: middle">@ConsolidatedRingerInfo(ringerData)</span>
                </div>
            </div>
        }
    </div>

    @if (!string.IsNullOrEmpty(Performance.Footnotes))
    {
        <div>
            @Performance.Footnotes
        </div>
    }

    @foreach (var newMethodData in Performance.NewMethods)
    {
        @if (!string.IsNullOrEmpty(@newMethodData.Title) || !string.IsNullOrEmpty(@newMethodData.PlaceNotation))
        {
            <div class="row">
                <div class="col">
                    @newMethodData.Title: @newMethodData.PlaceNotation
                </div>
            </div>
        }
    }

    @if (!string.IsNullOrEmpty(Performance.NormDepartures))
    {
        <div>
            @Performance.NormDepartures
        </div>
    }

    <br />

    <div class="mb-4">
        <button class="btn btn-primary mr-2"
                @onclick="@(e => NavManager.NavigateTo("/entry"))">
            Edit Performance
        </button>

        <button class="btn btn-primary"
                @onclick="@(e => NavManager.NavigateTo("/"))">
            Home
        </button>
    </div>
</div>
